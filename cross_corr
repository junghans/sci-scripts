#!/usr/bin/awk -f

BEGIN{
	#Version check, use gawk only !
	"awk --version" | getline version;
	if ( version !~ /GNU Awk/)
	{
		print "#WARING: This is not gawk (GNU awk). Could cause problem!";
	}
	print "#This is cross_corr.awk 0.2.6 (18.01.08) by CJ";
	if (ARGC>2)
	{
		print "#WARING: Average over multiple files!!";
	}
	if (ARGV[1]=="")
	{
		print "#FILE: STDIN";
	}
	else
	{
		print "#FILE:",ARGV[1];
	}
	if (col1=="")
	{
		col1=1;
		print "#Setting column1 to",col1,"(use option \"-v col1=X\" to change)";
	}
	else
	{
		print "#Using column1",col1;
	}
	if (col2=="")
	{
		col2=1;
		print "#Setting column2 to",col2,"(use option \"-v col2=X\" to change)";
	}
	else
	{
		print "#Using column2",col2;
	}
	if (timescale=="")
	{
		timescale=1;
		print "#Setting timescale to",timescale,"(use option \"-v timescale=X\" to change)";
	}
	else
	{
		print "#Using timescale",timescale;
	}
	c=0;
	warn=0;
	if ( col1 > col2)
	{
		max_col=col1;
	}
	else
	{
		max_col=col2;
	}
	mean_data1=0;
	mean_data2=0;
	mixed_mean=0;
}

/^[@#]/{
	next;
}

{
	if (NF>=max_col)
	{
		data1[c]=$col1;
		data2[c]=$col2;
		c++;
		mean_data1+=$col1;
		mean_data2+=$col2;
		mixed_mean+=$col1*$col2;
	}
	else
	{
		if (warn == 0)
		{
			print "# Not enough data in line",NR;
			warn++;
		}
	}
}

END{
	mean_data1/=c;
	mean_data2/=c;
	mixed_mean/=c;
	mean1_x_mean2=mean_data1*mean_data2;
	cor_norm=mixed_mean-mean1_x_mean2;	
	int_cor=0;
	print "#values=",c,"mean1=",mean_data1,"mean2=",mean_data2,"mixed_mean=",mixed_mean,"norm=",cor_norm;
	print "#Output format: dt cor_of_dt int_cor log(cor_of_dt) tau_int se_tau_int";
	#not so important, will be reset anyway later
	max_dt=c/10;
	neg=0;
	for (dt=0;dt<max_dt;dt++)
	{
		mixed_mean_dt=0;
		mean1_0=0;
		mean2_dt=0;
		
		#corrected norm useful for strongly correlated data, but slow !
		mixed_mean_0=0;
		mean2_0=0;

		mean_max=c-dt;
		
		#same statistics for all dt useful for long timeseries
		#mean_max=c-max_dt;
		
		for (i=0;i<mean_max;i++)
		{
			mixed_mean_dt+=data1[i]*data2[i+dt];
			mean1_0+=data1[i];
			mean2_dt+=data2[i+dt];
			
			#corrected norm useful for strongly correlated data, but slow !
			mean2_0+=data2[i];
			mixed_mean_0+=data1[i]*data2[i];

			#print i,data1[i],data2[i+dt],mixed_mean_dt;
		}
		mixed_mean_dt/=mean_max;
		mean1_0/=mean_max;
		mean2_dt/=mean_max;
		
		#corrected norm useful for strongly correlated data, but slow !
		mean2_0/=mean_max;
		mixed_mean_0/=mean_max;
		cor_norm=mixed_mean_0-mean1_0*mean2_0;
		
		#print "norm",mixed_mean_dt;
		cor_of_dt=(mixed_mean_dt-mean1_0*mean2_dt)/cor_norm;

		#faster for long time serie, BUT mean has higher statistics -> bias
		#cor_of_dt=(mixed_mean_dt-mean_data1*mean_data2)/cor_norm;
		
		int_cor+=cor_of_dt;
		time=dt*timescale;
		if ( cor_of_dt > 0)
		{
			log_cor=log(cor_of_dt);
		}
		else
		{
			log_cor="nan";
		}
		#tau_int=0.5+sum k=1,inf A(K)=int_cor-0.5
		tau_int=int_cor-0.5;
		se_tau_int=tau_int*sqrt(2*(2*dt+1)/c);
		print time,cor_of_dt,int_cor,log_cor,tau_int,se_tau_int;
		
		#stop calc when:
		#a) correlation is negative, ten more steps
# 		if ((cor_of_dt < 0 ) && (neg==0))
# 		{
# 			#stop it!
# 			#max_dt=dt;
# 			max_dt=dt+10;
# 			neg++;
# 		}
		#b) rule of thumb (janke): dt >= 6*tau_int 
		if (dt >= 6*tau_int){
			max_dt=dt;
		}
		#c) never
		
		#procent on stderr
#		procent=dt/max_dt;
# 		print "#",procent,"%"
# 		if ( procent%10 == 0 )
# 		{
# 			print "#",procent,"%" > /dev/stderr
# 		}
	}
}
